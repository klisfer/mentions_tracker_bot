{
  updateSubject:
   Subject {
     _isScalar: false,
     observers: [ [Subscriber], [MergeMapSubscriber], [MergeMapSubscriber] ],
     closed: false,
     isStopped: false,
     hasError: false,
     thrownError: null },
  rpc:
   Rpc {
     contacts: Contacts { service: [ServiceClient] },
     messaging: Messaging { service: [ServiceClient] },
     registration: Registration { service: [ServiceClient] },
     mediaAndFiles: MediaAndFiles { service: [ServiceClient] },
     authentication: Authentication { service: [ServiceClient] },
     sequenceAndUpdates: SequenceAndUpdates { service: [ServiceClient] },
     metadata:
      Promise {
        _bitField: 167772160,
        _fulfillmentHandler0: [Function],
        _rejectionHandler0: [Metadata],
        _promise0: undefined,
        _receiver0: undefined } },
        ready:
   Promise {
     State { users: [Map], groups: [Map], dialogs: [Array], self: [User] } } }